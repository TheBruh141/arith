name: CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: rustup component add rustfmt clippy
      - run: cargo fmt --all --check
      - run: cargo clippy -- -D warnings

  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --verbose

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, build-and-test]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo install cross
      - run: cross build --target x86_64-unknown-linux-gnu --release
      - run: cross build --target x86_64-apple-darwin --release
      - run: cross build --target x86_64-pc-windows-msvc --release
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            target/x86_64-unknown-linux-gnu/release/arith
            target/x86_64-apple-darwin/release/arith
            target/x86_64-pc-windows-msvc/release/arith.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
